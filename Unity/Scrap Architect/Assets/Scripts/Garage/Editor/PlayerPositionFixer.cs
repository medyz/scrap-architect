using UnityEngine;
using UnityEditor;
using System;

namespace ScrapArchitect.Garage.Editor
{
    public class PlayerPositionFixer : EditorWindow
    {
        [MenuItem("Scrap Architect/Garage/EMERGENCY: Fix Player Under Ground")]
        public static void FixPlayerUnderGround()
        {
            Debug.Log("üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–¥ –∑–µ–º–ª–µ–π!");
            
            // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞...");
                CreateNewPlayer();
                return;
            }
            
            // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª –≥–∞—Ä–∞–∂–∞
            GameObject floor = FindGarageFloor();
            
            if (floor != null)
            {
                // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
                Vector3 floorPosition = floor.transform.position;
                Vector3 floorSize = GetFloorSize(floor);
                
                // –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ –ø–æ–ª–∞
                Vector3 newPlayerPosition = new Vector3(
                    floorPosition.x,
                    floorPosition.y + floorSize.y + 1f, // 1 –º–µ—Ç—Ä –≤—ã—à–µ –ø–æ–ª–∞
                    floorPosition.z
                );
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
                player.transform.position = newPlayerPosition;
                
                // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
                CharacterController controller = player.GetComponent<CharacterController>();
                if (controller != null)
                {
                    controller.center = new Vector3(0, 1f, 0);
                    controller.height = 2f;
                    controller.radius = 0.5f;
                }
                
                // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
                Camera playerCamera = player.GetComponentInChildren<Camera>();
                if (playerCamera != null)
                {
                    playerCamera.transform.localPosition = new Vector3(0, 1.8f, 0);
                }
                
                Debug.Log($"‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–µ—Ä–µ–º–µ—â–µ–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏—é: {newPlayerPosition}");
                Debug.Log($"‚úÖ –ü–æ–∑–∏—Ü–∏—è –ø–æ–ª–∞: {floorPosition}, –†–∞–∑–º–µ—Ä –ø–æ–ª–∞: {floorSize}");
            }
            else
            {
                // –ï—Å–ª–∏ –ø–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
                player.transform.position = new Vector3(0, 2f, 0);
                Debug.LogWarning("‚ö†Ô∏è –ü–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é (0, 2, 0)");
            }
            
            // –í—ã–±–∏—Ä–∞–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏
            Selection.activeGameObject = player;
            
            Debug.Log("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –ø–æ–ª—É.");
        }
        
        [MenuItem("Scrap Architect/Garage/ULTIMATE: Force Player Above Ground")]
        public static void UltimateForcePlayerAboveGround()
        {
            Debug.Log("üí• –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥–Ω—è—Ç–∏–µ –∏–≥—Ä–æ–∫–∞!");
            
            // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                return;
            }
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞ –≤—ã—Å–æ–∫–æ –Ω–∞–¥ –∑–µ–º–ª–µ–π
            player.transform.position = new Vector3(0, 5f, 0);
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller != null)
            {
                controller.center = new Vector3(0, 1f, 0);
                controller.height = 2f;
                controller.radius = 0.5f;
                controller.slopeLimit = 45f;
                controller.stepOffset = 0.3f;
                controller.skinWidth = 0.08f;
                controller.minMoveDistance = 0.001f;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera playerCamera = player.GetComponentInChildren<Camera>();
            if (playerCamera != null)
            {
                playerCamera.transform.localPosition = new Vector3(0, 1.8f, 0);
                playerCamera.transform.localRotation = Quaternion.identity;
            }
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫—É—Ä—Å–æ—Ä
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–Ω—è—Ç –Ω–∞ –≤—ã—Å–æ—Ç—É 5 –º–µ—Ç—Ä–æ–≤!");
            Selection.activeGameObject = player;
        }
        
        [MenuItem("Scrap Architect/Garage/DESTROY and RECREATE Player")]
        public static void DestroyAndRecreatePlayer()
        {
            Debug.Log("üî• –£–ù–ò–ß–¢–û–ñ–ï–ù–ò–ï –ò –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –ò–ì–†–û–ö–ê!");
            
            // –ù–∞—Ö–æ–¥–∏–º –∏ —É–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            GameObject oldPlayer = GameObject.Find("Player");
            if (oldPlayer != null)
            {
                Debug.Log("üóëÔ∏è –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞...");
                DestroyImmediate(oldPlayer);
            }
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            Debug.Log("üîß –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞...");
            CreateNewPlayer();
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω —Å –Ω—É–ª—è!");
        }
        
        [MenuItem("Scrap Architect/Garage/Find Garage Structure")]
        public static void FindGarageStructure()
        {
            Debug.Log("üîç –ü–æ–∏—Å–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥–∞—Ä–∞–∂–∞...");
            
            GameObject[] allObjects = FindObjectsOfType<GameObject>();
            
            foreach (GameObject obj in allObjects)
            {
                string name = obj.name.ToLower();
                if (name.Contains("garage") || name.Contains("floor") || 
                    name.Contains("wall") || name.Contains("ceiling") ||
                    name.Contains("carpet") || name.Contains("ground"))
                {
                    Vector3 position = obj.transform.position;
                    Vector3 scale = obj.transform.localScale;
                    
                    Debug.Log($"üèóÔ∏è –ù–∞–π–¥–µ–Ω –æ–±—ä–µ–∫—Ç: {obj.name}");
                    Debug.Log($"üìç –ü–æ–∑–∏—Ü–∏—è: {position}");
                    Debug.Log($"üìè –†–∞–∑–º–µ—Ä: {scale}");
                    
                    // –í—ã–±–∏—Ä–∞–µ–º –æ–±—ä–µ–∫—Ç –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏
                    Selection.activeGameObject = obj;
                    break;
                }
            }
        }
        
        [MenuItem("Scrap Architect/Garage/Set Player to Garage Roof")]
        public static void SetPlayerToGarageRoof()
        {
            Debug.Log("üè† –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞ –Ω–∞ –∫—Ä—ã—à—É –≥–∞—Ä–∞–∂–∞...");
            
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                return;
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞ –Ω–∞ –∫—Ä—ã—à—É –≥–∞—Ä–∞–∂–∞
            player.transform.position = new Vector3(0, 8f, 0);
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller != null)
            {
                controller.center = new Vector3(0, 1f, 0);
                controller.height = 2f;
                controller.radius = 0.5f;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera playerCamera = player.GetComponentInChildren<Camera>();
            if (playerCamera != null)
            {
                playerCamera.transform.localPosition = new Vector3(0, 1.8f, 0);
            }
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∫—Ä—ã—à—É –≥–∞—Ä–∞–∂–∞ (0, 8, 0)");
            Selection.activeGameObject = player;
        }
        
        [MenuItem("Scrap Architect/Garage/Teleport Player to Garage Entrance")]
        public static void TeleportPlayerToGarageEntrance()
        {
            Debug.Log("üö™ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞ –∫ –≤—Ö–æ–¥—É –≤ –≥–∞—Ä–∞–∂...");
            
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                return;
            }
            
            // –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–∞ –∫ –≤—Ö–æ–¥—É –≤ –≥–∞—Ä–∞–∂
            player.transform.position = new Vector3(0, 2f, 10f);
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller != null)
            {
                controller.center = new Vector3(0, 1f, 0);
                controller.height = 2f;
                controller.radius = 0.5f;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera playerCamera = player.GetComponentInChildren<Camera>();
            if (playerCamera != null)
            {
                playerCamera.transform.localPosition = new Vector3(0, 1.8f, 0);
            }
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫ –≤—Ö–æ–¥—É –≤ –≥–∞—Ä–∞–∂ (0, 2, 10)");
            Selection.activeGameObject = player;
        }
        
        static GameObject FindGarageFloor()
        {
            // –ò—â–µ–º –ø–æ–ª –ø–æ —Ä–∞–∑–Ω—ã–º –∏–º–µ–Ω–∞–º
            GameObject floor = GameObject.Find("Floor");
            if (floor != null) return floor;
            
            floor = GameObject.Find("Carpet");
            if (floor != null) return floor;
            
            floor = GameObject.Find("Ground");
            if (floor != null) return floor;
            
            // –ò—â–µ–º –ø–æ —Ç–µ–≥—É
            GameObject[] taggedObjects = GameObject.FindGameObjectsWithTag("Ground");
            if (taggedObjects.Length > 0) return taggedObjects[0];
            
            // –ò—â–µ–º –ø–æ –∏–º–µ–Ω–∏, —Å–æ–¥–µ—Ä–∂–∞—â–µ–º—É "floor"
            GameObject[] allObjects = FindObjectsOfType<GameObject>();
            foreach (GameObject obj in allObjects)
            {
                if (obj.name.ToLower().Contains("floor") || 
                    obj.name.ToLower().Contains("carpet") ||
                    obj.name.ToLower().Contains("ground"))
                {
                    return obj;
                }
            }
            
            return null;
        }
        
        static Vector3 GetFloorSize(GameObject floor)
        {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∏–∑ —Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞
            Renderer renderer = floor.GetComponent<Renderer>();
            if (renderer != null)
            {
                return renderer.bounds.size;
            }
            
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∏–∑ –∫–æ–ª–ª–∞–π–¥–µ—Ä–∞
            Collider collider = floor.GetComponent<Collider>();
            if (collider != null)
            {
                return collider.bounds.size;
            }
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞
            return floor.transform.localScale;
        }
        
        static void CreateNewPlayer()
        {
            Debug.Log("üîß –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞...");
            
            // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞
            GameObject player = new GameObject("Player");
            player.transform.position = new Vector3(0, 5f, 0); // –í—ã—Å–æ–∫–æ –Ω–∞–¥ –∑–µ–º–ª–µ–π
            
            // –î–æ–±–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.AddComponent<CharacterController>();
            controller.center = new Vector3(0, 1f, 0);
            controller.height = 2f;
            controller.radius = 0.5f;
            controller.slopeLimit = 45f;
            controller.stepOffset = 0.3f;
            controller.skinWidth = 0.08f;
            controller.minMoveDistance = 0.001f;
            
            // –°–æ–∑–¥–∞–µ–º –∫–∞–º–µ—Ä—É
            GameObject cameraObj = new GameObject("PlayerCamera");
            cameraObj.transform.SetParent(player.transform);
            cameraObj.transform.localPosition = new Vector3(0, 1.8f, 0);
            
            Camera camera = cameraObj.AddComponent<Camera>();
            camera.tag = "MainCamera";
            camera.fieldOfView = 60f;
            camera.nearClipPlane = 0.1f;
            camera.farClipPlane = 1000f;
            
            // –î–æ–±–∞–≤–ª—è–µ–º GarageManager
            GarageManager garageManager = player.AddComponent<GarageManager>();
            garageManager.playerCamera = camera;
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫—É—Ä—Å–æ—Ä
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
            
            Debug.Log("‚úÖ –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω –Ω–∞ –≤—ã—Å–æ—Ç–µ 5 –º–µ—Ç—Ä–æ–≤!");
            Selection.activeGameObject = player;
        }
        
        [MenuItem("Scrap Architect/Garage/Find and Show Floor Position")]
        public static void FindAndShowFloorPosition()
        {
            Debug.Log("üîç –ü–æ–∏—Å–∫ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–ª–∞...");
            
            GameObject floor = FindGarageFloor();
            if (floor != null)
            {
                Vector3 floorPosition = floor.transform.position;
                Vector3 floorSize = GetFloorSize(floor);
                
                Debug.Log($"‚úÖ –ü–æ–ª –Ω–∞–π–¥–µ–Ω: {floor.name}");
                Debug.Log($"üìç –ü–æ–∑–∏—Ü–∏—è –ø–æ–ª–∞: {floorPosition}");
                Debug.Log($"üìè –†–∞–∑–º–µ—Ä –ø–æ–ª–∞: {floorSize}");
                Debug.Log($"üîù –í–µ—Ä—Ö–Ω—è—è —Ç–æ—á–∫–∞ –ø–æ–ª–∞: {floorPosition.y + floorSize.y}");
                
                // –í—ã–±–∏—Ä–∞–µ–º –ø–æ–ª –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏
                Selection.activeGameObject = floor;
            }
            else
            {
                Debug.LogWarning("‚ö†Ô∏è –ü–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        }
        
        [MenuItem("Scrap Architect/Garage/Show Player Position")]
        public static void ShowPlayerPosition()
        {
            GameObject player = GameObject.Find("Player");
            if (player != null)
            {
                Vector3 playerPosition = player.transform.position;
                Debug.Log($"üìç –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞: {playerPosition}");
                
                CharacterController controller = player.GetComponent<CharacterController>();
                if (controller != null)
                {
                    Debug.Log($"üéØ CharacterController.center: {controller.center}");
                    Debug.Log($"üìè CharacterController.height: {controller.height}");
                    Debug.Log($"üîµ CharacterController.radius: {controller.radius}");
                }
                
                Camera camera = player.GetComponentInChildren<Camera>();
                if (camera != null)
                {
                    Debug.Log($"üì∑ –ü–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã: {camera.transform.position}");
                    Debug.Log($"üì∑ –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã: {camera.transform.localPosition}");
                }
                
                Selection.activeGameObject = player;
            }
            else
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            }
        }
        
        [MenuItem("Scrap Architect/Garage/Set Player to Garage Center")]
        public static void SetPlayerToGarageCenter()
        {
            Debug.Log("üéØ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä –≥–∞—Ä–∞–∂–∞...");
            
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                return;
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä –≥–∞—Ä–∞–∂–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ 2 –º–µ—Ç—Ä–∞
            player.transform.position = new Vector3(0, 2f, 0);
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller != null)
            {
                controller.center = new Vector3(0, 1f, 0);
                controller.height = 2f;
                controller.radius = 0.5f;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera playerCamera = player.GetComponentInChildren<Camera>();
            if (playerCamera != null)
            {
                playerCamera.transform.localPosition = new Vector3(0, 1.8f, 0);
            }
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ü–µ–Ω—Ç—Ä –≥–∞—Ä–∞–∂–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ 2 –º–µ—Ç—Ä–∞");
            Selection.activeGameObject = player;
        }
        
        [MenuItem("Scrap Architect/Garage/Reset Player to Safe Position")]
        public static void ResetPlayerToSafePosition()
        {
            Debug.Log("üõ°Ô∏è –°–±—Ä–æ—Å –∏–≥—Ä–æ–∫–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é...");
            
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                return;
            }
            
            // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è - –≤—ã—Å–æ–∫–æ –Ω–∞–¥ –≥–∞—Ä–∞–∂–æ–º
            player.transform.position = new Vector3(0, 10f, 0);
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller != null)
            {
                controller.center = new Vector3(0, 1f, 0);
                controller.height = 2f;
                controller.radius = 0.5f;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera playerCamera = player.GetComponentInChildren<Camera>();
            if (playerCamera != null)
            {
                playerCamera.transform.localPosition = new Vector3(0, 1.8f, 0);
            }
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ —Å–±—Ä–æ—à–µ–Ω –≤ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é (0, 10, 0)");
            Selection.activeGameObject = player;
        }
    }
}
