using UnityEngine;
using UnityEditor;

namespace ScrapArchitect.Garage.Editor
{
    public class PlayerDebugger : EditorWindow
    {
        [MenuItem("Scrap Architect/Garage/Fix Player Position (Walking on Ceiling)")]
        public static void FixPlayerPosition()
        {
            Debug.Log("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–ó–ò–¶–ò–ò –ü–ï–†–°–û–ù–ê–ñ–ê ===");
            
            // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                Debug.Log("üí° –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞...");
                CreatePlayerInCurrentScene();
                return;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
            player.transform.position = new Vector3(0, 1f, 0);
            Debug.Log("‚úÖ –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞: (0, 1, 0)");
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller == null)
            {
                controller = player.AddComponent<CharacterController>();
            }
            
            // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ö–æ–¥—å–±—ã –ø–æ –ø–æ–ª—É
            controller.height = 2f;
            controller.radius = 0.5f;
            controller.center = new Vector3(0, 1f, 0); // –¶–µ–Ω—Ç—Ä –Ω–∞ —É—Ä–æ–≤–Ω–µ –≥—Ä—É–¥–∏
            controller.slopeLimit = 45f;
            controller.stepOffset = 0.3f;
            controller.skinWidth = 0.08f;
            controller.minMoveDistance = 0.001f;
            
            Debug.Log("‚úÖ CharacterController –∏—Å–ø—Ä–∞–≤–ª–µ–Ω:");
            Debug.Log($"   - Height: {controller.height}");
            Debug.Log($"   - Radius: {controller.radius}");
            Debug.Log($"   - Center: {controller.center}");
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera camera = player.GetComponentInChildren<Camera>();
            if (camera != null)
            {
                camera.transform.localPosition = new Vector3(0, 1.8f, 0);
                camera.transform.localRotation = Quaternion.identity;
                Debug.Log("‚úÖ –ü–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞: (0, 1.8, 0)");
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º GarageManager
            GarageManager garageManager = player.GetComponent<GarageManager>();
            if (garageManager != null)
            {
                garageManager.playerCamera = camera;
                Debug.Log("‚úÖ GarageManager –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –∫–∞–º–µ—Ä–µ");
            }
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫—É—Ä—Å–æ—Ä
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
            
            Debug.Log("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===");
            Debug.Log("üéÆ –¢–µ–ø–µ—Ä—å –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–ª–∂–µ–Ω —Ö–æ–¥–∏—Ç—å –ø–æ –ø–æ–ª—É!");
        }
        
        [MenuItem("Scrap Architect/Garage/Create Player in Current Scene")]
        public static void CreatePlayerInCurrentScene()
        {
            Debug.Log("=== –°–û–ó–î–ê–ù–ò–ï –ò–ì–†–û–ö–ê –í –¢–ï–ö–£–©–ï–ô –°–¶–ï–ù–ï ===");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫
            GameObject existingPlayer = GameObject.Find("Player");
            if (existingPlayer != null)
            {
                Debug.LogWarning("‚ö†Ô∏è –ò–≥—Ä–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ü–µ–Ω–µ!");
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞
            GameObject player = new GameObject("Player");
            player.transform.position = new Vector3(0, 1f, 0);
            
            // –î–æ–±–∞–≤–ª—è–µ–º CharacterController —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            CharacterController controller = player.AddComponent<CharacterController>();
            controller.height = 2f;
            controller.radius = 0.5f;
            controller.center = new Vector3(0, 1f, 0); // –¶–µ–Ω—Ç—Ä –Ω–∞ —É—Ä–æ–≤–Ω–µ –≥—Ä—É–¥–∏
            controller.slopeLimit = 45f;
            controller.stepOffset = 0.3f;
            controller.skinWidth = 0.08f;
            controller.minMoveDistance = 0.001f;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            GameObject camera = new GameObject("PlayerCamera");
            camera.transform.SetParent(player.transform);
            camera.transform.localPosition = new Vector3(0, 1.8f, 0);
            camera.transform.localRotation = Quaternion.identity;
            
            Camera cam = camera.AddComponent<Camera>();
            cam.fieldOfView = 60f;
            cam.nearClipPlane = 0.1f;
            cam.farClipPlane = 1000f;
            cam.tag = "MainCamera";
            
            // –î–æ–±–∞–≤–ª—è–µ–º GarageManager
            GarageManager garageManager = player.AddComponent<GarageManager>();
            garageManager.playerCamera = cam;
            garageManager.walkSpeed = 5f;
            garageManager.runSpeed = 8f;
            garageManager.mouseSensitivity = 2f;
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫—É—Ä—Å–æ—Ä
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
            
            // –í—ã–±–∏—Ä–∞–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏
            Selection.activeGameObject = player;
            
            Debug.Log("‚úÖ –ò–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ —Ç–µ–∫—É—â–µ–π —Å—Ü–µ–Ω–µ!");
            Debug.Log("‚úÖ CharacterController –¥–æ–±–∞–≤–ª–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏");
            Debug.Log("‚úÖ –ö–∞–º–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞");
            Debug.Log("‚úÖ GarageManager –¥–æ–±–∞–≤–ª–µ–Ω");
            Debug.Log("‚úÖ –ö—É—Ä—Å–æ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω");
            Debug.Log("=== –°–û–ó–î–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===");
        }
        
        [MenuItem("Scrap Architect/Garage/Debug Player Movement")]
        public static void DebugPlayerMovement()
        {
            Debug.Log("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–°–û–ù–ê–ñ–ê ===");
            
            // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                Debug.Log("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'Create Player in Current Scene' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞");
                return;
            }
            
            Debug.Log($"‚úÖ –ò–≥—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω: {player.name}");
            Debug.Log($"‚úÖ –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞: {player.transform.position}");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller == null)
            {
                Debug.LogError("‚ùå CharacterController –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                controller = player.AddComponent<CharacterController>();
                Debug.Log("‚úÖ CharacterController –¥–æ–±–∞–≤–ª–µ–Ω");
            }
            else
            {
                Debug.Log($"‚úÖ CharacterController –Ω–∞–π–¥–µ–Ω:");
                Debug.Log($"   - Height: {controller.height}");
                Debug.Log($"   - Radius: {controller.radius}");
                Debug.Log($"   - Center: {controller.center}");
                Debug.Log($"   - Position: {controller.transform.position}");
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º GarageManager
            GarageManager garageManager = player.GetComponent<GarageManager>();
            if (garageManager == null)
            {
                Debug.LogError("‚ùå GarageManager –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                garageManager = player.AddComponent<GarageManager>();
                Debug.Log("‚úÖ GarageManager –¥–æ–±–∞–≤–ª–µ–Ω");
            }
            else
            {
                Debug.Log($"‚úÖ GarageManager –Ω–∞–π–¥–µ–Ω: WalkSpeed={garageManager.walkSpeed}, RunSpeed={garageManager.runSpeed}");
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–º–µ—Ä—É
            Camera camera = player.GetComponentInChildren<Camera>();
            if (camera == null)
            {
                Debug.LogError("‚ùå –ö–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
                CreatePlayerCamera(player);
            }
            else
            {
                Debug.Log($"‚úÖ –ö–∞–º–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞: {camera.name}");
                Debug.Log($"‚úÖ –ü–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã: {camera.transform.localPosition}");
                garageManager.playerCamera = camera;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É—Ä—Å–æ—Ä
            Debug.Log($"–ö—É—Ä—Å–æ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: {Cursor.lockState == CursorLockMode.Locked}");
            Debug.Log($"–ö—É—Ä—Å–æ—Ä –≤–∏–¥–∏–º: {Cursor.visible}");
            
            Debug.Log("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===");
        }
        
        [MenuItem("Scrap Architect/Garage/Fix Player Movement")]
        public static void FixPlayerMovement()
        {
            Debug.Log("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–ï–†–°–û–ù–ê–ñ–ê ===");
            
            // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞
            GameObject player = GameObject.Find("Player");
            if (player == null)
            {
                Debug.LogError("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                Debug.Log("üí° –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞...");
                CreatePlayerInCurrentScene();
                return;
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CharacterController
            CharacterController controller = player.GetComponent<CharacterController>();
            if (controller == null)
            {
                controller = player.AddComponent<CharacterController>();
            }
            controller.height = 2f;
            controller.radius = 0.5f;
            controller.center = new Vector3(0, 1f, 0);
            Debug.Log("‚úÖ CharacterController –∏—Å–ø—Ä–∞–≤–ª–µ–Ω");
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º GarageManager
            GarageManager garageManager = player.GetComponent<GarageManager>();
            if (garageManager == null)
            {
                garageManager = player.AddComponent<GarageManager>();
            }
            garageManager.walkSpeed = 5f;
            garageManager.runSpeed = 8f;
            garageManager.mouseSensitivity = 2f;
            Debug.Log("‚úÖ GarageManager –∏—Å–ø—Ä–∞–≤–ª–µ–Ω");
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
            Camera camera = player.GetComponentInChildren<Camera>();
            if (camera == null)
            {
                CreatePlayerCamera(player);
            }
            else
            {
                camera.tag = "MainCamera";
                garageManager.playerCamera = camera;
                Debug.Log("‚úÖ –ö–∞–º–µ—Ä–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞");
            }
            
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
            Debug.Log("‚úÖ –ö—É—Ä—Å–æ—Ä –∏—Å–ø—Ä–∞–≤–ª–µ–Ω");
            
            Debug.Log("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===");
        }
        
        [MenuItem("Scrap Architect/Garage/Unlock Cursor")]
        public static void UnlockCursor()
        {
            Cursor.lockState = CursorLockMode.None;
            Cursor.visible = true;
            Debug.Log("‚úÖ –ö—É—Ä—Å–æ—Ä —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω");
        }
        
        [MenuItem("Scrap Architect/Garage/Lock Cursor")]
        public static void LockCursor()
        {
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
            Debug.Log("‚úÖ –ö—É—Ä—Å–æ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω");
        }
        
        static void CreatePlayerCamera(GameObject player)
        {
            GameObject cameraObj = new GameObject("PlayerCamera");
            cameraObj.transform.SetParent(player.transform);
            cameraObj.transform.localPosition = new Vector3(0, 1.8f, 0);
            cameraObj.transform.localRotation = Quaternion.identity;
            
            Camera camera = cameraObj.AddComponent<Camera>();
            camera.fieldOfView = 60f;
            camera.nearClipPlane = 0.1f;
            camera.farClipPlane = 1000f;
            camera.tag = "MainCamera";
            
            Debug.Log("‚úÖ –ö–∞–º–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞");
        }
        
        [MenuItem("Scrap Architect/Garage/Test Input")]
        public static void TestInput()
        {
            Debug.Log("=== –¢–ï–°–¢ –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===");
            Debug.Log($"Horizontal: {Input.GetAxis("Horizontal")}");
            Debug.Log($"Vertical: {Input.GetAxis("Vertical")}");
            Debug.Log($"Mouse X: {Input.GetAxis("Mouse X")}");
            Debug.Log($"Mouse Y: {Input.GetAxis("Mouse Y")}");
            Debug.Log($"W pressed: {Input.GetKey(KeyCode.W)}");
            Debug.Log($"A pressed: {Input.GetKey(KeyCode.A)}");
            Debug.Log($"S pressed: {Input.GetKey(KeyCode.S)}");
            Debug.Log($"D pressed: {Input.GetKey(KeyCode.D)}");
            Debug.Log("=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===");
        }
    }
}
